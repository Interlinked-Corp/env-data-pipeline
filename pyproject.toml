[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "env-data-pipeline"
version = "1.0.0"
description = "Environmental data pipeline for retrieving geospatial data by latitude and longitude coordinates"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Interlinked Team"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
]
keywords = ["environmental", "geospatial", "coordinates", "gis", "landfire", "modis", "elevation", "weather"]

dependencies = [
    "requests>=2.28.0",
    "rasterio>=1.3.0",
    "numpy>=1.21.0",
    "boto3>=1.26.0",
    "botocore>=1.29.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "mypy>=1.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "isort>=5.10.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
]

[project.urls]
Homepage = "https://github.com/Interlinked-Corp/env-data-pipeline"
Repository = "https://github.com/Interlinked-Corp/env-data-pipeline"
Documentation = "https://github.com/Interlinked-Corp/env-data-pipeline#readme"
"Bug Tracker" = "https://github.com/Interlinked-Corp/env-data-pipeline/issues"

[project.scripts]
env-data-pipeline = "pipeline:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["services*", "pipeline*"]

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt", "*.toml"]

# Tool configurations
[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["services", "pipeline"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests", "."]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]